#!/bin/bash

DURATION="120"
TYPE="ORG"

while getopts "t:d:h" opt; do
  case $opt in
	t)
	  TYPE=$OPTARG
	  if [ "$TYPE" == "ORG" ] || [ "$TYPE" == "MOD" ] || [ "$TYPE" == "NMS" ]
		then
		  echo "Measurement type: $OPTARG" >&2
		else
		  echo "Measurement type not valid!"
		  exit 1
	  fi
	  ;;
    d)
      echo "Measurement duration: $OPTARG seconds" >&2
      DURATION=$OPTARG
      ;;
    h)
      echo -e "Usage:\nstartMeasurement_withNMS.sh [-d DURATION] -t {ORG|MOD|NMS}"
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# monitor traffic with tcpdump to file
# output of switch 2 (first data stream)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s2-eth2 -Z ubuntu -w "$TYPE"_s2-eth2.cap'\""
# output of switch 4 (second data stream)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s4-eth1 -Z ubuntu -w "$TYPE"_s4-eth1.cap'\""
# output of switch 3 (both data streams)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s3-eth3 -Z ubuntu -w "$TYPE"_s3-eth3.cap'\""
# output of switch 1 (both data streams before limitation)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s1-eth3 -Z ubuntu -w "$TYPE"_s1-eth3.cap'\""

if [ "$TYPE" == "NMS" ]
  then
    # start network management system
    gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/simpleNms.py -i 10; exec bash'\""
fi

sleep 5
# start iperf bandwidth test
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh_iperf3.py -d $DURATION -c 4 -b 200 -p 5001 -n iperf1 -a -r /home/ubuntu/iperfResult1.txt'\""
sleep 40
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh_iperf3.py -d $DURATION -c 4 -b 200 -p 5002 -n iperf2 -a -r /home/ubuntu/iperfResult2.txt'\""
sleep 40
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh_iperf3.py -d $DURATION -c 4 -b 200 -p 5003 -n iperf3 -a -r /home/ubuntu/iperfResult3.txt'\""

sleep $DURATION
sleep 10
# kill tcpdump in vagrant vm
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'sudo killall tcpdump'\""
# kill iperf server on mininet vm in vagrant vm
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'ssh ubuntu@100.0.1.201 'sudo killall iperf3'; expect \"password:\"; sleep 1; send \"4fa3fe78fc88f8b5c19e50c0\"'\""
# kill nms?

# copy iperf output to measurement folder
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/; cp ./iperfResult1.txt ./captures/iperfResult1.txt'\""
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/; cp ./iperfResult2.txt ./captures/iperfResult2.txt'\""
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/; cp ./iperfResult3.txt ./captures/iperfResult3.txt'\""

### create results
leftVmFolder="$HOME/Masterthesis/vm/leftVm"
folderName="$leftVmFolder/captures/${TYPE}_$(date +%F_%H-%M-%S)"
# create new folder with date and time
mkdir $folderName
# move capture to the new folder
mv $leftVmFolder/captures/*.cap $folderName

# generate folder and compute graphs for each cap file
for f in $folderName/*.cap
do
	# echo "File: $f"
	fileBaseName=$(basename "$f")
	# echo "FileBaseName: $fileBaseName"
	fileName="${fileBaseName%.*}"
	# echo "FileName: $fileName"
	fileFolderName="$folderName/$fileName"
	
	mkdir $fileFolderName
	mv $f $fileFolderName
	
	$leftVmFolder/python/rScripts/createPlot.sh -r "$leftVmFolder/python/rScripts/Bandwidth_allClients_onePlot/bandwidth_allClients_onePlot.r" -o "$fileFolderName/${fileName}-combined.png" -i "$fileFolderName/$fileBaseName"
	$leftVmFolder/python/rScripts/createPlot.sh -r "$leftVmFolder/python/rScripts/Bandwidth_allClients_manyPlot/bandwidth_allClients_manyPlot.r" -o "$fileFolderName/${fileName}_separate.png" -i "$fileFolderName/$fileBaseName"
done

# move iperf result to the new folder
mv $leftVmFolder/captures/*.txt $folderName

unset leftVmFolder folderName fileBaseName fileName fileFolderName
