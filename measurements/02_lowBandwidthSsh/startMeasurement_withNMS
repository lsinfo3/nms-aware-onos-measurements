#!/bin/bash

DURATION="120"

while getopts "d:h" opt; do
  case $opt in
    d)
      echo "Measurement duration: $OPTARG s" >&2
      DURATION=$OPTARG
      ;;
    h)
      echo -e "Usage:\nstartMeasurement_withNMS.sh [-d DURATION]"
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# monitor traffic with tcpdump to file
# output of switch 2 (first data stream)
# gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s2-eth1 -Z ubuntu -w nms_s2-eth1.cap'\""
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s2-eth2 -Z ubuntu -w nms_s2-eth2.cap'\""
# output of switch 4 (second data stream)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s4-eth1 -Z ubuntu -w nms_s4-eth1.cap'\""
# gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s4-eth2 -Z ubuntu -w nms_s4-eth2.cap'\""
# output of switch 3 (both data streams)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s3-eth3 -Z ubuntu -w nms_s3-eth3.cap'\""
# output of switch 1 (both data streams before limitation)
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'cd /home/ubuntu/captures/; sudo tcpdump -i s1-eth3 -Z ubuntu -w nms_s1-eth3.cap'\""

# start network management system
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/simpleNms.py -i 10; exec bash'\""

sleep 5
# start iperf bandwidth test
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh.py -d $DURATION -c 4 -b 200 -p 5001 -n iperf1 -a -r /home/ubuntu/iperfResult1.txt'\""
sleep 40
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh.py -d $DURATION -c 4 -b 200 -p 5002 -n iperf2 -a -r /home/ubuntu/iperfResult2.txt'\""
sleep 40
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c '/home/ubuntu/python/measurements/02_lowBandwidthSsh/testOverSsh.py -d $DURATION -c 4 -b 200 -p 5003 -n iperf3 -a -r /home/ubuntu/iperfResult3.txt'\""

sleep $DURATION
sleep 10
# kill iperf server on mininet vm in vagrant vm
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'ssh ubuntu@100.0.1.201 'sudo killall iperf'; expect \"password:\"; sleep 1; send \"4fa3fe78fc88f8b5c19e50c0\"'\""
# kill tcpdump in vagrant vm
gnome-terminal -e "bash -c \"cd $HOME/Masterthesis/vm/leftVm/; vagrant ssh -c 'sudo killall tcpdump'\""
# kill nms?


# mv capture files to new folder
leftVmFolder="$HOME/Masterthesis/vm/leftVm"
folderName="$leftVmFolder/captures/nms_$(date +%F_%H-%M-%S)"
mkdir $folderName
mv $leftVmFolder/captures/*.cap $folderName

# generate folder and compute graphs for each cap file
for f in $folderName/*.cap
do
	# echo "File: $f"
	fileBaseName=$(basename "$f")
	# echo "FileBaseName: $fileBaseName"
	fileName="${fileBaseName%.*}"
	# echo "FileName: $fileName"
	fileFolderName="$folderName/$fileName"
	
	mkdir $fileFolderName
	mv $f $fileFolderName
	
	$leftVmFolder/python/rScripts/createPlot.sh -r "$leftVmFolder/python/rScripts/Bandwidth_allClients_onePlot/bandwidth_allClients_onePlot.r" -o "$fileFolderName/${fileName}-combined.png" -i "$fileFolderName/$fileBaseName"
	$leftVmFolder/python/rScripts/createPlot.sh -r "$leftVmFolder/python/rScripts/Bandwidth_allClients_manyPlot/bandwidth_allClients_manyPlot.r" -o "$fileFolderName/${fileName}_separate.png" -i "$fileFolderName/$fileBaseName"
done

unset leftVmFolder folderName fileBaseName fileName fileFolderName
